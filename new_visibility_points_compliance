DROP VIEW IF EXISTS procter_and_gamble_es_pharma.visibility_points_compliance CASCADE;
CREATE OR REPLACE VIEW procter_and_gamble_es_pharma.visibility_points_compliance as
-- calculating visibility points from storechecks_planogram_fact
--oc_compliance = Photo_tag: Detrás del mostrador AND Photo_group: Lineal (legacy calculation) OR Photo_group=Expositor en mostrador (current calculation from 2022.01)
--bc_compliance = Photo_tag: En el mostrador AND Photo_group: Lineal (legacy calculation) OR Photo_group=Lineal detrás del mostrador (current calculation from 2022.01)
--ptc_compliance = Photo_tag: Zona T AND Photo_group: Expositor camino al mostrador (legacy calculation) OR Photo_group=Expositor camino al mostrador (current calculation from 2022.01)
with recursive
cte_visibility_points
as
(
select
	storechecks_visit_fact_view.visit_id,
	storechecks_visit_fact_view.visit_date_key,
	storechecks_visit_fact_view.owner_id,
	storechecks_visit_fact_view.store_id,
	product_master.base,
	product_master.seg1,
	product_master.brand,
	sum(
                case
                    when storechecks_planogram_fact.own = 1 
                    	and ((storechecks_planogram_fact.photo_tag::text = 'En el mostrador'::character varying::text 
                    		and storechecks_planogram_fact.photo_group_type::text = 'Lineal'::character varying::text ) 
                    		or storechecks_planogram_fact.photo_group_type::text = 'Expositor en mostrador'::character varying::text) 
                    then storechecks_planogram_fact.facings
                    else null::smallint
                end) as on_counter_point,
	sum(
                case
                    when storechecks_planogram_fact.own = 1 
                    	and ((storechecks_planogram_fact.photo_tag::text = 'Detrás del mostrador'::character varying::text 
                   			and storechecks_planogram_fact.photo_group_type::text = 'Lineal'::character varying::text ) 
                   			or storechecks_planogram_fact.photo_group_type::text = 'Lineal detrás del mostrador'::character varying::text) 
                    then storechecks_planogram_fact.facings
                    else null::smallint
                end) as behind_counter_point,
	sum(
                case
                    when storechecks_planogram_fact.own = 1 
                   		and (( storechecks_planogram_fact.photo_tag::text = 'Zona T'::character varying::text 
                   			and storechecks_planogram_fact.photo_group_type::text = 'Segunda ubicación'::character varying::text ) 
                   			or storechecks_planogram_fact.photo_group_type::text = 'Expositor camino al mostrador'::character varying::text) 
                    then storechecks_planogram_fact.facings
                    else null::smallint
                end) as tzone_point
from
	procter_and_gamble_es_pharma.storechecks_planogram_fact storechecks_planogram_fact,
	procter_and_gamble_es_pharma.storechecks_visit_fact_view storechecks_visit_fact_view,
	procter_and_gamble_es_pharma.product_master product_master 
where
	storechecks_planogram_fact.visit_id = storechecks_visit_fact_view.visit_id
	and storechecks_planogram_fact.product_id = product_master.product_id
	and product_master.manufacturer::text = 'Procter and Gamble'::character varying::text
group by
	storechecks_visit_fact_view.visit_id,
	storechecks_visit_fact_view.visit_date_key,
	storechecks_visit_fact_view.owner_id,
	storechecks_visit_fact_view.store_id,
	product_master.base,
	product_master.seg1,
	product_master.brand)
	SELECT 
	cte_visibility_points.visit_id, 
	cte_visibility_points.visit_date_key, 
	cte_visibility_points.owner_id, 
	cte_visibility_points.store_id, 
	cte_visibility_points.base, 
	cte_visibility_points.seg1 AS segment, 
	cte_visibility_points.brand, 
        CASE
            WHEN cte_visibility_points.on_counter_point > 1 
            	and cte_visibility_points.seg1 in ('Denture Adhesives','Rubs','MSR','Nasal Deco','Calm&Sleep') THEN 1
            when cte_visibility_points.seg1 not in ('Denture Adhesives','Rubs','MSR','Nasal Deco','Calm&Sleep') THEN null::smallint
            ELSE 0
        END AS oc_compliance, 
        CASE
            WHEN cte_visibility_points.behind_counter_point > 1 
            and cte_visibility_points.seg1 in ('Pregnancy','Diagnostics') THEN 1
            WHEN cte_visibility_points.seg1 not in ('Pregnancy','Diagnostics') THEN null::smallint
            ELSE 0
        END AS bc_compliance, 
        CASE
            WHEN cte_visibility_points.tzone_point > 1 
            and cte_visibility_points.seg1 in ('POC','Toothpastes','Denture Adhesives','Calm&Sleep') THEN 1
            WHEN cte_visibility_points.seg1 not in ('POC','Toothpastes','Denture Adhesives','Calm&Sleep') THEN null::smallint
            ELSE 0
        END AS tzone_compliance,
        case
        	when cte_visibility_points.on_counter_point > 1
        		or cte_visibility_points.behind_counter_point > 1 
        		or cte_visibility_points.tzone_point > 1 then 1
        	else 0
        end as sp_compliance	
   from cte_visibility_points
   group by
   	cte_visibility_points.visit_id, 
	cte_visibility_points.visit_date_key, 
	cte_visibility_points.owner_id, 
	cte_visibility_points.store_id, 
	cte_visibility_points.base, 
	cte_visibility_points.seg1, 
	cte_visibility_points.brand,
	oc_compliance,
	bc_compliance,
	tzone_compliance,
	sp_compliance;
	
GRANT SELECT ON procter_and_gamble_es_pharma.visibility_points_compliance  TO powerbi_user1;
GRANT TRIGGER, SELECT, DELETE, UPDATE, RULE, INSERT, REFERENCES ON procter_and_gamble_es_pharma.visibility_points_compliance  TO plano_auto_export;
GRANT SELECT ON procter_and_gamble_es_pharma.visibility_points_compliance  TO pg_es_pharma;


COMMIT;
