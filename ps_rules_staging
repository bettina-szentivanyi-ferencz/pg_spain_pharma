SELECT 
a.visit_id, 
b.visit_date_key, 
b.store_id, 
b.owner_id, 
b.categ_name, 
a.display_group, 
split_part(a.kpi_group1::text, ' - '::character varying::text, 1)::character varying AS brand, 
split_part(a.kpi_group1::text, ' - '::character varying::text, 2)::character varying AS segment, 
        CASE
            WHEN (count( -- should be simplified? there is no calculation neccessary, it always 1, 0
            CASE
                WHEN a.compliant = true THEN 1
                ELSE NULL::integer
            END)::numeric::numeric(18,0) * 1.0 / count(
            CASE
                WHEN a.compliant = false OR a.compliant = true OR a.compliant IS NULL THEN 1
                ELSE NULL::integer
            END)::numeric::numeric(18,0) * 1.0) > 0::numeric::numeric(18,0) THEN 1
            ELSE 0
        END AS compliance, c.weight
   FROM procter_and_gamble_es_pharma.storechecks_kpi_fact a, procter_and_gamble_es_pharma.storechecks_visit_fact_view b, procter_and_gamble_es_pharma.ps_weight c
  WHERE 
  a.visit_id = b.visit_id 
  AND split_part(a.kpi_group1::text, ' - '::character varying::text, 1) = c.brand::text 
  AND a.display_group::text = c.ps::text AND a.kpi_group1::text <> ''::character varying::text 
  AND a.display_group::text !~~ '%Share of%'::character varying::text 
  AND split_part(a.kpi_group1::text, ' - '::character varying::text, 2) <> ''::character varying::text 
  AND b.quarter_rank = 1 AND b.daily_rank = 1 
  AND (a.kpi_group1::text || a.display_group::text) <> 'Oral B - POCOral B - Permanent Display'::character varying::text
  GROUP BY a.visit_id, b.visit_date_key, b.store_id, b.owner_id, b.categ_name, a.display_group, a.kpi_group1, c.weight
UNION -- is it needed? there is no such table in DWH.
 SELECT 
 price_compliance.visit_id, 
 price_compliance.visit_date_key, 
 price_compliance.store_id, 
 price_compliance.owner_id, 
 price_compliance.categ_name, 
 price_compliance.display_group, 
 price_compliance.brand, 
 price_compliance.seg1 AS segment, 
 price_compliance.compliance,
 price_compliance.weight
   FROM procter_and_gamble_es_pharma.price_compliance;
