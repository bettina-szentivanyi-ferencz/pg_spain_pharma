renaming: visibility_point_compliance
with recursive
-- calculating visibility points from storechecks_planogram_fact
cte_visibility_points
as
(
select
	storechecks_visit_fact_view.visit_id,
	storechecks_visit_fact_view.visit_date_key,
	storechecks_visit_fact_view.owner_id,
	storechecks_visit_fact_view.store_id,
	product_master.base,
	product_master.seg1,
	product_master.brand,
	sum(
                case
                    when storechecks_planogram_fact.own = 1 
                    	and ((storechecks_planogram_fact.photo_tag::text = 'En el mostrador'::character varying::text 
                    		and storechecks_planogram_fact.photo_group_type::text = 'Lineal'::character varying::text ) 
                    		or storechecks_planogram_fact.photo_group_type::text = 'Expositor en mostrador'::character varying::text)  
                    then storechecks_planogram_fact.facings
                    else null::smallint
                end) as on_counter_point,
	sum(
                case
                    when storechecks_planogram_fact.own = 1 
                    	and ((storechecks_planogram_fact.photo_tag::text = 'Detrás del mostrador'::character varying::text 
                   			and storechecks_planogram_fact.photo_group_type::text = 'Lineal'::character varying::text ) 
                   			or storechecks_planogram_fact.photo_group_type::text = 'Lineal detrás del mostrador'::character varying::text) 
                    then storechecks_planogram_fact.facings
                    else null::smallint
                end) as behind_counter_point,
	sum(
                case
                    when storechecks_planogram_fact.own = 1 
                   		and (( storechecks_planogram_fact.photo_tag::text = 'Zona T'::character varying::text 
                   			and storechecks_planogram_fact.photo_group_type::text = 'Segunda ubicación'::character varying::text ) 
                   			or storechecks_planogram_fact.photo_group_type::text = 'Expositor camino al mostrador'::character varying::text) 
                    then storechecks_planogram_fact.facings
                    else null::smallint
                end) as path_to_counter_point
from
	procter_and_gamble_es_pharma.storechecks_planogram_fact storechecks_planogram_fact,
	procter_and_gamble_es_pharma.storechecks_visit_fact_view storechecks_visit_fact_view,
	procter_and_gamble_es_pharma.product_master product_master 
where
	storechecks_planogram_fact.visit_id = storechecks_visit_fact_view.visit_id
	and storechecks_planogram_fact.product_id = product_master.product_id
	and product_master.manufacturer::text = 'Procter and Gamble'::character varying::text
group by
	storechecks_visit_fact_view.visit_id,
	storechecks_visit_fact_view.visit_date_key,
	storechecks_visit_fact_view.owner_id,
	storechecks_visit_fact_view.store_id,
	product_master.base,
	product_master.seg1,
	product_master.brand)
	SELECT 
	cte_visibility_points.visit_id, 
	cte_visibility_points.visit_date_key, 
	cte_visibility_points.owner_id, 
	cte_visibility_points.store_id, 
	cte_visibility_points.base, 
	cte_visibility_points.seg1 AS segment, 
	cte_visibility_points.brand, 
        CASE
            WHEN cte_visibility_points.on_counter_point > 1 THEN 1
            ELSE 0
        END AS on_counter_compliance, 
        CASE
            WHEN cte_visibility_points.behind_counter_point > 1 THEN 1
            ELSE 0
        END AS behind_counter_compliance, 
        CASE
            WHEN cte_visibility_points.path_to_counter_point > 1 THEN 1
            ELSE 0
        END AS path_to_counter_compliance
   from cte_visibility_points
   group by
   	cte_visibility_points.visit_id, 
	cte_visibility_points.visit_date_key, 
	cte_visibility_points.owner_id, 
	cte_visibility_points.store_id, 
	cte_visibility_points.base, 
	cte_visibility_points.seg1, 
	cte_visibility_points.brand,
	on_counter_compliance,
	behind_counter_compliance,
	path_to_counter_compliance;
