DROP VIEW IF EXISTS procter_and_gamble_es_pharma.category_compliance CASCADE;
CREATE OR REPLACE VIEW procter_and_gamble_es_pharma.category_compliance AS
with recursive
-- filtering visit data from storechecks_visit_fact_fiscal_year and product data from product_master
cte_visit_product_dim
-- old z
as
(
select
	distinct 
  storechecks_visit_fact_fiscal_year.visit_id,
	storechecks_visit_fact_fiscal_year.visit_date_key,
	storechecks_visit_fact_fiscal_year.fiscal_year_id,
	storechecks_visit_fact_fiscal_year.store_id,
	storechecks_visit_fact_fiscal_year.owner_id,
	storechecks_visit_fact_fiscal_year.categ_name,
	product_master.seg1,
	product_master.brand,
	product_master.brand::text || storechecks_visit_fact_fiscal_year.fiscal_year_id::text as brand_sales_id
from
	procter_and_gamble_es_pharma.storechecks_visit_fact_fiscal_year storechecks_visit_fact_fiscal_year,
	procter_and_gamble_es_pharma.product_master product_master
where
	storechecks_visit_fact_fiscal_year.categ_name::text = product_master.base::text
	and product_master.seg1::text !~~ '%NO SEGMENT%'::character varying::text
	and product_master.seg1::text <> 'DEVALID PRODUCT'::character varying::text
	and product_master.desc_j::text <> 'EXCLUDE'::character varying::text),
-- calculating sum of own and total facing on brand level per primary (Lineal) and secondary shelf (Segunda ubicación) from storechecks_planogram_fact
cte_product_facing_fact
-- old a
as
 (
select
	storechecks_planogram_fact.visit_id,
	product_master.base,
	product_master.seg1,
	product_master.brand,
	sum(
                case
                    when storechecks_planogram_fact.photo_group_type::text in ('Lineal'::character varying::text,'Lineal libre acceso'::character varying::text,'Lineal detrás del mostrador'::character varying::text)  
                    and product_master.desc_j::text = 'INCLUDE'::character varying::text 
                    and storechecks_planogram_fact.own = 1 then storechecks_planogram_fact.facings::double precision
                    else null::double precision
                end) as own_primary_shelf_facing,
     sum(
                case
                    when storechecks_planogram_fact.photo_group_type::text <> 'Otros'::character varying::text
                    and product_master.desc_j::text = 'INCLUDE'::character varying::text 
                    and storechecks_planogram_fact.own = 1 then storechecks_planogram_fact.facings::double precision
                    else null::double precision
                end) as own_total_shelf_facing,
	sum(
                case
                    when storechecks_planogram_fact.photo_group_type::text in ('Lineal'::character varying::text,'Lineal libre acceso'::character varying::text,'Lineal detrás del mostrador'::character varying::text)  
                    and product_master.desc_j::text = 'INCLUDE'::character varying::text 
                    then storechecks_planogram_fact.facings::double precision
                    else null::double precision
                end) as brand_primary_shelf_facing,
    sum(
                case
                    when storechecks_planogram_fact.photo_group_type::text <> 'Otros'::character varying::text
                    and product_master.desc_j::text = 'INCLUDE'::character varying::text 
                    then storechecks_planogram_fact.facings::double precision
                    else null::double precision
                end) as brand_total_shelf_facing
from
	procter_and_gamble_es_pharma.storechecks_planogram_fact storechecks_planogram_fact,
	procter_and_gamble_es_pharma.product_master product_master
where
	storechecks_planogram_fact.product_id = product_master.product_id
group by
	storechecks_planogram_fact.visit_id,
	product_master.base,
	product_master.seg1,
	product_master.brand),
-- calculating sum of own and total facing on segment level per primary (Lineal) shelf and secondary(Segunda ubicación) from storechecks_planogram_fact
cte_count_own_brand_per_category
-- old z
as
(
select
	cte_visit_product_dim.store_id,
	cte_visit_product_dim.visit_date_key,
	cte_visit_product_dim.categ_name,
	cte_visit_product_dim.owner_id,
	count(distinct
	case when cte_product_facing_fact.own_primary_shelf_facing is not null then  cte_visit_product_dim.brand end) as count_own_brand
from
	cte_visit_product_dim, cte_product_facing_fact
	where cte_visit_product_dim.visit_id=cte_product_facing_fact.visit_id
group by
	cte_visit_product_dim.store_id,
	cte_visit_product_dim.visit_date_key,
	cte_visit_product_dim.categ_name,
	cte_visit_product_dim.owner_id
)
select	
	cte_count_own_brand_per_category.store_id,
	cte_count_own_brand_per_category.visit_date_key,
	cte_count_own_brand_per_category.categ_name,
	cte_count_own_brand_per_category.owner_id,
	case
        	when (cte_count_own_brand_per_category.categ_name='Cuidado Oral - Oral Care'::text and  cte_count_own_brand_per_category.count_own_brand>0) 
        	or (cte_count_own_brand_per_category.categ_name='Diagnóstico - Pregnancy'::text and  cte_count_own_brand_per_category.count_own_brand>0) 
        	or (cte_count_own_brand_per_category.categ_name='Respiratorio - Cough & Cold'::text and  cte_count_own_brand_per_category.count_own_brand>0)
        	or (cte_count_own_brand_per_category.categ_name='Vitaminas - Vitamins'::text and  cte_count_own_brand_per_category.count_own_brand>0)
        	or (cte_count_own_brand_per_category.categ_name='Cuidado Bebé - Baby Care'::text and  cte_count_own_brand_per_category.count_own_brand>0)
        	then 1::integer
        	else 0::integer
        end as category_compliance
    from cte_count_own_brand_per_category
group by
	cte_count_own_brand_per_category.store_id,
	cte_count_own_brand_per_category.visit_date_key,
	cte_count_own_brand_per_category.categ_name,
	cte_count_own_brand_per_category.owner_id,
	category_compliance;
	
GRANT SELECT ON procter_and_gamble_es_pharma.category_compliance TO powerbi_user1;
GRANT TRIGGER, SELECT, DELETE, UPDATE, RULE, INSERT, REFERENCES ON procter_and_gamble_es_pharma.category_compliance TO plano_auto_export;
GRANT SELECT ON procter_and_gamble_es_pharma.category_compliance TO pg_es_pharma;


COMMIT;
