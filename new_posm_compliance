DROP VIEW IF EXISTS procter_and_gamble_es_pharma.posm_compliance CASCADE;
CREATE OR REPLACE VIEW procter_and_gamble_es_pharma.posm_compliance AS
with recursive
cte_visit_product_dim
as
(
select
	distinct 
    storechecks_visit_fact_fiscal_year.visit_id,
	storechecks_visit_fact_fiscal_year.visit_date_key,
	storechecks_visit_fact_fiscal_year.fiscal_year_id,
	storechecks_visit_fact_fiscal_year.store_id,
	storechecks_visit_fact_fiscal_year.owner_id,
	storechecks_visit_fact_fiscal_year.categ_name,
	product_master.brand,
	product_master.brand::text || storechecks_visit_fact_fiscal_year.fiscal_year_id::text as brand_sales_id
from
	procter_and_gamble_es_pharma.storechecks_visit_fact_fiscal_year storechecks_visit_fact_fiscal_year,
	procter_and_gamble_es_pharma.product_master product_master
where
	storechecks_visit_fact_fiscal_year.categ_name::text = product_master.base::text
	and product_master.manufacturer::text = 'Procter and Gamble'::character varying::text
	and product_master.product_id::text <>'61892755fdcd982780006c64' 
	and  product_master.product_id::text <>'6189270bfdcd982780006c07' 
	and  product_master.product_id::text <>'618927d7fdcd982a48003b46' 
	and product_master.product_id::text <>'61892866fdcd9843b8006970'),
cte_posm_fact
as
 (
select
	storechecks_planogram_fact.visit_id,
	split_part(product_master.desc_i::text, ' - '::character varying::text, 1)::character varying as posm,
	split_part(product_master.desc_i::text, ' - '::character varying::text, 2)::character varying as type_name,
	product_master.base,
	product_master.brand,
	sum(
                case
                    when product_master.desc_i <>''  then storechecks_planogram_fact.facings::double precision
                    else null::double precision
                end) as posm_compliance
from
	procter_and_gamble_es_pharma.storechecks_planogram_fact storechecks_planogram_fact,
	procter_and_gamble_es_pharma.product_master product_master
where
	storechecks_planogram_fact.product_id = product_master.product_id
	and product_master.desc_i<>''
group by
	storechecks_planogram_fact.visit_id,
	product_master.base,
	product_master.brand,
	product_master.desc_i),
posm_fact_product_level
as
 (
select
	storechecks_planogram_fact.visit_id,
	split_part(product_master.desc_i::text, ' - '::character varying::text, 1)::character varying as posm,
	split_part(product_master.desc_i::text, ' - '::character varying::text, 2)::character varying as type_name,
	product_master.base,
	product_master.brand,
	product_master.description as posm_name,
		sum(
                case
                    when product_master.desc_i <>''  then storechecks_planogram_fact.facings::double precision
                    else null::double precision
                end) as posm_name_compliance
from
	procter_and_gamble_es_pharma.storechecks_planogram_fact storechecks_planogram_fact,
	procter_and_gamble_es_pharma.product_master product_master
where
	storechecks_planogram_fact.product_id = product_master.product_id
	and product_master.desc_i<>''
group by
	storechecks_planogram_fact.visit_id,
	product_master.base,
	product_master.brand,
	product_master.description,
	product_master.desc_i)
select
	cte_visit_product_dim.store_id,
	store_master.internal_code,
	cte_visit_product_dim.owner_id,
	cte_visit_product_dim.visit_id,
	cte_visit_product_dim.visit_date_key,
	cte_visit_product_dim.categ_name,
	kbd_calculations.seg1,
	cte_visit_product_dim.brand,
	cte_visit_product_dim.brand_sales_id,
	cte_posm_fact.type_name as posm_type,
	posm_fact_product_level.posm_name,
	case when cte_posm_fact.posm_compliance is null then 0::integer
	else 1
	end as posm_type_compliance,
	case when  posm_fact_product_level.posm_name_compliance is null then 0::integer
	else 1
	end as posm_name_compliance
from 
cte_visit_product_dim cte_visit_product_dim
left join cte_posm_fact cte_posm_fact on cte_posm_fact.visit_id=cte_visit_product_dim.visit_id
and cte_posm_fact.base=cte_visit_product_dim.categ_name 
and  cte_posm_fact.brand=cte_visit_product_dim.brand
left join posm_fact_product_level posm_fact_product_level on posm_fact_product_level.visit_id=cte_visit_product_dim.visit_id
and posm_fact_product_level.base=cte_visit_product_dim.categ_name 
and cte_posm_fact.type_name=posm_fact_product_level.type_name
and  posm_fact_product_level.brand=cte_visit_product_dim.brand
left join kbd_calculations kbd_calculations on kbd_calculations.visit_id=cte_visit_product_dim.visit_id
and kbd_calculations.categ_name=cte_visit_product_dim.categ_name 
and  kbd_calculations.brand=cte_visit_product_dim.brand
join procter_and_gamble_es_pharma.store_master store_master on  cte_visit_product_dim.store_id = store_master.store_id
group by 
	cte_visit_product_dim.store_id,
	store_master.internal_code,
	cte_visit_product_dim.owner_id,
	cte_visit_product_dim.visit_id,
	cte_visit_product_dim.visit_date_key, 
	cte_visit_product_dim.categ_name,
	kbd_calculations.seg1,
	cte_visit_product_dim.brand,
	cte_visit_product_dim.brand_sales_id,
	cte_posm_fact.type_name,
	posm_fact_product_level.posm_name,
	posm_type_compliance,
	posm_name_compliance;
	
GRANT SELECT ON procter_and_gamble_es_pharma.posm_compliance TO powerbi_user1;
GRANT TRIGGER, SELECT, DELETE, UPDATE, RULE, INSERT, REFERENCES ON procter_and_gamble_es_pharma.posm_compliance TO plano_auto_export;
GRANT SELECT ON procter_and_gamble_es_pharma.posm_compliance TO pg_es_pharma;


COMMIT;
